FROM phusion/baseimage:0.11

# largely copied from the python 3.7.1 dockerfile:
# https://github.com/docker-library/python/blob/4437475f468147e441561c3906806ef2cceea409/3.7/stretch/Dockerfile
# ensure local python is preferred over distribution python
ENV PATH /usr/local/bin:$PATH

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

ENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
ENV PYTHON_VERSION 3.7.1

# if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
ENV PYTHON_PIP_VERSION 18.1

RUN apt-get update -qy && \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install \
       build-essential libreadline-gplv2-dev libncursesw5-dev libssl-dev \
       libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev uuid-dev \
			 zlib1g-dev libffi-dev libdb-dev liblzma-dev \
       nginx wget \
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.cache

# the gpg command to fetch the key frequently fails and have to re-run the docker
# container so I've broken this into two parts so that the apt packages can be cached

# Install python
RUN set -ex \
     && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
     && wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
     && export GNUPGHOME="$(mktemp -d)" \
     && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "${GPG_KEY}" \
     && gpg --batch --verify python.tar.xz.asc python.tar.xz \
     && { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \
     && rm -rf "$GNUPGHOME" python.tar.xz.asc \
     && mkdir -p /usr/src/python \
     && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
     && rm python.tar.xz \
     && cd /usr/src/python \
     && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && ./configure \
                --build="$gnuArch" \
                --enable-loadable-sqlite-extensions \
                --enable-shared \
                --with-system-expat \
                --with-system-ffi \
                --without-ensurepip \
     && make -j "$(nproc)" \
     && make install \
     && ldconfig \
     && cd /tmp \
     && rm -rf /usr/src/python \
     && python3 --version \
# Install PIP 
     && wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \
     && python3 get-pip.py \
          --disable-pip-version-check \
          --no-cache-dir \
          "pip==$PYTHON_PIP_VERSION" \
     && pip --version \
     && find /usr/local -depth \
        \( \
           \( -type d -a \( -name test -o -name tests \) \) \
           -o \
           \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
        \) -exec rm -rf '{}' + \
     && rm -f get-pip.py \
     && pip install --no-cache-dir uwsgi flask \
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.cache
